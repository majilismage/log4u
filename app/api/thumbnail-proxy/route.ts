import { NextRequest, NextResponse } from 'next/server';
import fetch from 'node-fetch'; // Or any other HTTP client like axios

export async function GET(request: NextRequest) {
  const { searchParams } = new URL(request.url);
  const url = searchParams.get('url');

  if (!url || typeof url !== 'string') {
    return NextResponse.json({ error: 'Image URL is required' }, { status: 400 });
  }

  try {
    // Important: You might need to pass through your Google Drive access token
    // if the thumbnailLink itself is protected and requires authentication.
    // This depends on how the thumbnailLink is generated by your /api/list-drive endpoint.
    // If the thumbnailLink is already publicly accessible (but rate-limited),
    // then a direct fetch might work. Otherwise, you'll need to use the
    // Google Drive SDK/API with proper auth on the server-side to fetch the image content.

    const imageResponse = await fetch(url);

    if (!imageResponse.ok) {
      const errorText = await imageResponse.text();
      console.error(`Failed to fetch image from Google: ${imageResponse.status} ${imageResponse.statusText}`, errorText);
      return NextResponse.json({ error: 'Failed to fetch image from Google', details: errorText }, { status: imageResponse.status });
    }

    const imageBuffer = await imageResponse.arrayBuffer(); // Use arrayBuffer for NextResponse
    const contentType = imageResponse.headers.get('content-type') || 'image/jpeg';

    const response = new NextResponse(imageBuffer, {
      status: 200,
      headers: {
        'Content-Type': contentType,
        'Cache-Control': 'public, max-age=600, must-revalidate', // Cache for 10 mins
      },
    });
    return response;

  } catch (error) {
    console.error('Error in thumbnail proxy:', error);
    return NextResponse.json({ error: 'Internal server error proxying image' }, { status: 500 });
  }
}